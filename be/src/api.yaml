openapi: 3.0.0
info:
  title: SDN Store API
  description: API endpoints documented on swagger
  version: 1.0

servers:
  - url: http://localhost:9999/
    description: Local server
  - url: https://sdn-store.netlify.app/
    description: Production server

components:
  securitySchemes:
    ApiTokenss: # arbitrary name for the security scheme
      type: http
      scheme: bearer

    ApiKey: # arbitrary name for the security scheme
      type: apiKey
      in: header # can be "header", "query" or "cookie"
      name: apikey

paths:
  /users:
    get:
      tags:
        - User
      summary: Returns a User list.
      parameters:
        - name: name
          in: query
          required: false
          schema:
            type: string
        - name: status
          in: query
          required: false
          schema:
            type: string
        - name: page
          in: query
          required: false
          schema:
            type: string
        - name: email
          in: query
          required: false
          schema:
            type: string
      responses:
        "200":
          description: A User list.
        default:
          description: Unexpected error

  /users/{userId}:
    get:
      tags:
        - User
      security:
        - ApiTokenss: []
        - ApiKey: []
      summary: Returns a user details by ID.
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            # type : integer
            # format: int64
            type: string
            example: "User Id"
            minimum: 1
      responses:
        "200":
          description: OK

    patch:
      tags:
        - User
      summary: Updates a user details by ID.
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
            example: "User Id"
            minimum: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: "Nam"
      responses:
        "200":
          description: A user object.
        "400":
          description: The specified user ID is invalid (not a number).
        "404":
          description: A user with the specified ID was not found.
        default:
          description: Unexpected error

  /products:
    get:
      tags:
        - Product
      summary: Returns a product list.
      parameters:
        - name: category
          in: query
          required: false
          schema:
            type: string
        - name: brand
          in: query
          required: false
          schema:
            type: string
        - name: name
          in: query
          required: false
          schema:
            type: string
        - name: status
          in: query
          required: false
          schema:
            type: string
        - name: page
          in: query
          required: false
          schema:
            type: string
        - name: year
          in: query
          required: false
          schema:
            type: string
      responses:
        "200":
          description: A product list.
        default:
          description: Unexpected error

    post:
      tags:
        - Product
      summary: Create product.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: "Nam"
                price:
                  type: number
                  example: 1
                originalPrice:
                  type: number
                  example: 1
                year:
                  type: number
                  example: 1
                category:
                  type: string
                  example: "a"
                brand:
                  type: string
                  example: "a"
                detail:
                  type: string
                  example: "a"
                describe:
                  type: string
                  example: "a"
                featured:
                  type: boolean
                  example: false
                status:
                  type: boolean
                  example: false
      responses:
        "200":
          description: A product object.
        default:
          description: Unexpected error

  /products/{id}:
    get:
      tags:
        - Product
      security:
        - ApiTokenss: []
        - ApiKey: []
      summary: Returns a product details by ID.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            example: "Product Id"
            minimum: 1
      responses:
        "200":
          description: OK

    patch:
      tags:
        - Product
      summary: Update product.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: "Nam"
                price:
                  type: number
                  example: 1
                originalPrice:
                  type: number
                  example: 1
                year:
                  type: number
                  example: 1
                category:
                  type: string
                  example: "a"
                brand:
                  type: string
                  example: "a"
                detail:
                  type: string
                  example: "a"
                describe:
                  type: string
                  example: "a"
                featured:
                  type: boolean
                  example: false
                status:
                  type: boolean
                  example: false
      responses:
        "200":
          description: A product object.
        default:
          description: Unexpected error

    delete:
      tags:
        - Product
      summary: Delete product.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            example: "Id"
            minimum: 1
      responses:
        "200":
          description: A product object.
        default:
          description: Unexpected error

  /categories:
    get:
      tags:
        - Category
      summary: Returns a category list.
      parameters:
        - name: name
          in: query
          required: false
          schema:
            type: string
      responses:
        "200":
          description: A category list.
        default:
          description: Unexpected error

    post:
      tags:
        - Category
      summary: Create category.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: "Nam"
      responses:
        "200":
          description: A category object.
        default:
          description: Unexpected error

  /categories/{id}:
    get:
      tags:
        - Category
      security:
        - ApiTokenss: []
        - ApiKey: []
      summary: Returns a category details by ID.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            example: "Category Id"
            minimum: 1
      responses:
        "200":
          description: OK

    patch:
      tags:
        - Category
      summary: Update category.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: "Nam"
      responses:
        "200":
          description: A category object.
        default:
          description: Unexpected error

  /brands:
    get:
      tags:
        - Brand
      summary: Returns a brand list.
      parameters:
        - name: name
          in: query
          required: false
          schema:
            type: string
      responses:
        "200":
          description: A brand list.
        default:
          description: Unexpected error

    post:
      tags:
        - Brand
      summary: Create brand.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: "Nam"
      responses:
        "200":
          description: A brand object.
        default:
          description: Unexpected error

  /brands/{id}:
    get:
      tags:
        - Brand
      security:
        - ApiTokenss: []
        - ApiKey: []
      summary: Returns a brand details by ID.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            example: "Brand Id"
            minimum: 1
      responses:
        "200":
          description: OK

    patch:
      tags:
        - Brand
      summary: Update brand.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: "Nam"
      responses:
        "200":
          description: A brand object.
        default:
          description: Unexpected error
